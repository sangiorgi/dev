var mongoose = require('mongoose');
var Schema  = mongoose.Schema;

var orderSchema = new Schema({id:Number,
    date_created:String,
    date_closed:String,
    last_updated:String,
    manufacturing_ending_date:String,
    feedback:{sale:String,purchase:String},
    comment:String,
    pack_id:Number,
    pickup_id:String,
    order_request:{return:String,change:String},
    fulfilled:Boolean,
    mediations:Array,
    total_amount:Number,
    paid_amount:Number,
    coupon:{id:String,amount:Number},
    expiration_date:String,
    order_items:[
      {item:
       {id:String,
       title:String,
       category_id:String,
       variation_id:Number,
       seller_custom_field:String,
       variation_attributes:[
        {id:String,
         name:String,
         value_id:String,
         value_name:String},
         {id:String,
         name:String,
         value_id:String,
         value_name:String}],
         warranty:String,
         condition:String,
         seller_sku:String,
         global_price:String},
         quantity:Number,
         unit_price:Number,
         full_unit_price:Number,
         currency_id:String,
         manufacturing_days:String,
         sale_fee:Number,
         listing_type_id:String}
         ],
    currency_id:String,
    payments:[
      {id:Number,
      order_id:Number,
      payer_id:Number,
      collector:{id:Number},
      card_id:String,
      site_id:String,
      reason:String,
      payment_method_id:String,
      currency_id:String,
      installments:Number,
      issuer_id:String,
      atm_transfer_reference:{company_id:String,transaction_id:String},
      coupon_id:String,
      activation_uri:String,
      operation_type:String,
      payment_type:String,
      available_actions:[String],
      status:String,
      status_code:String,
      status_detail:String,
      transaction_amount:Number,
      taxes_amount:Number,
      shipping_cost:Number,
      coupon_amount:Number,
      overpaid_amount:Number,
      total_paid_amount:Number,
      installment_amount:String,
      deferred_period:String,
      date_approved:String,
      authorization_code:String,
      transaction_order_id:String,
      date_created:String,
      date_last_modified:String}
      ],
    shipping:{id:Number},
    status:String,
    status_detail:String,
    tags:[String],
    buyer:{id:Number,nickname:String,email:String,first_name:String,last_name:String},
    seller:{id:Number,nickname:String,email:String,first_name:String,last_name:String,phone:{extension:String,area_code:String,number:String,verified:Boolean},alternative_phone:{area_code:String,extension:String,number:String}}
    ,taxes:{amount:String,currency_id:String}}    
    ,{collection:'orders'}, { bufferCommands: false })

var orders = mongoose.model("orders",orderSchema);

module.exports = orders;